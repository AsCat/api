// Code generated by gogen.Generate; DO NOT EDIT.

package v1alpha3

import (
	"fmt"

	"cuelang.org/go/cue"
	"cuelang.org/go/encoding/gocode/gocodec"
)

var cuegenvalServers = cuegenMake("Servers", nil)

// Validate validates x.
func (x Servers) Validate() error {
	return cuegenCodec.Validate(cuegenvalServers, x)
}

var cuegenvalServer = cuegenMake("Server", nil)

// Validate validates x.
func (x Server) Validate() error {
	return cuegenCodec.Validate(cuegenvalServer, x)
}

var cuegenCodec, cuegenInstance = func() (*gocodec.Codec, *cue.Instance) {
	var r *cue.Runtime
	r = &cue.Runtime{}
	instances, err := r.Unmarshal(cuegenInstanceData)
	if err != nil {
		panic(err)
	}
	if len(instances) != 1 {
		panic("expected encoding of exactly one instance")
	}
	return gocodec.New(r, nil), instances[0]
}()

// cuegenMake is called in the init phase to initialize CUE values for
// validation functions.
func cuegenMake(name string, x interface{}) cue.Value {
	v := cuegenInstance.Lookup(name)
	if !v.Exists() {
		panic(fmt.Errorf("could not find type %q in instance", name))
	}
	if x != nil {
		w, err := cuegenCodec.ExtractType(x)
		if err != nil {
			panic(err)
		}
		v = v.Unify(w)
	}
	return v
}

// Data size: 395 bytes.
var cuegenInstanceData = []byte("\x01\x1f\x8b\b\x00\x00\x00\x00\x00\x00\xfft\x8e\xc1n\xd3@\x10\x86g\x9c \xe1\xa5\xf0\x06H+\v\xa1$\x92\x1d\xda\x1e\x10\xe6\x80P\x11-\x12m\xa3&'\xac \r\u0592,\xb5w-\xef\xa4\x11\xa1=\x14J\u1a7b\u022e\x81\v\u073e\xfd\xfe\u007fv\xe6\xbe\xff\x11`\xe0\u007f\x02\xfa\xaf\x00O\xfde\x0fqK\x1b\xc7dr\xf5\x8a\x98\x1a\x8f=\xec\x9fX\xcb\x18\x00\xf6'\xc4K\xdc\x02\xbc\xf3Z\x17\u02a1\xbf\x06\x80\x87\xfe{\x80\xf8 \x9b\xe7+\x95|\xd4E7y\r\xe8\xaf\x00\x06\xfe[\x0f\xf1\xee_\u007f\x05\x18`\xff\x88J\xd5|\xd4o\xa5\x00\x80\x1b\xbcl.A\u0121v\xacm\xa2\xed\xf8\x139k\u059brL\x95\x1e\x1b\xc5k[\x9fj\xb3\x18\x9fmSQ-i\x17\x11\xef-\x88\u055a>'\xf9J\xe1\r>\xaf(?\xa5\x85\x92\xbf+B\u8cb25\u02e8\u040e#!\xa6\xaa>S\xb5Ke\x96$\xc9\xedc.\x1f\xcb&M\x0e\xb5y\u00eat\x83\xeda\xd7K\xe5\x17\x11\x1eX\xc7\xdd\xc0\xd2:\xfeg=l\x92T\xca\xe8\xfd`t\x9e\xc5\x14o\xe2\x97\xf1\xbb'\xf1\xb3\xf9(\xa3x\xd3\xf1p\x90\xfc?\x1b=\x8aD8\xb15\xb7KCC\xa5z\x91J\xe9\xb8\xd6f\u0448U\xf9\xa1\xb9h\xa5\r\xef\xee\x880\xacj\xcb6\xb7E*\xb3\xe8`6\x9bD\xf2\\\xb60mi\xffd\xb2\xf7G\xed\xb4tx|\xb4\u007f\xdc\xd2l\xef\xb6>{;\x8d\xe6\"\xbc\x10\x17\x02\xe0W\x00\x00\x00\xff\xff_\x12W\xd9\x11\x02\x00\x00")
